[
	{msw, [
		{ssh_server_hostname, any},
		{ssh_server_port, 7322},
		{dboptions, [{adapter, mock}]}
		]},

	{cowboy,[
		{bind_address,"0.0.0.0"},
		{port,8016},
		{server_name,nitrogen},
		{document_root,"./priv/static"},
		%% If a path ends with /, it will be assumed to be a directory
		%% If a path does not end with a slash, it will be treated as a single file
		%% This particular static_paths setting only applies to the included nitrogen_sup.erl
		%% You're free to set your own set of dispatch rules in nitrogen_sup.erl
		{static_paths, ["/js/","/images/","/css/","/nitrogen/","/favicon.ico", "/plugins/"]}
	]},

	{nitrogen, [
		% If a signkey is not specified, then Nitrogen uses the Erlang cookie.
		% {signkey, "SECRET"}, 

		% Default session timeout is 20 minutes.
		% {session_timeout, 20},

		% Specify a session cookie name. Uses "wf" by default.
		% {cookie_name, "wf"}
	]},

	%% SASL config
	{sasl, [
		{sasl_error_logger, {file, "log/sasl-error.log"}},
		{errlog_type, error},
		{error_logger_mf_dir, "log/sasl"},      % Log directory
		{error_logger_mf_maxbytes, 10485760},   % 10 MB max file size
		{error_logger_mf_maxfiles, 5}           % 5 files max
	]},

	{sync,[

		%% growl: Desktop notifications
		%% valid values: all | none | [success | warning | error]
		%% default: all
		{growl, all},

		%% log: Console notifications
		%% valid values: all | none | [success | warnings | errors]
		%% default: all
		{log, all},

		%% non_descendant: How to handle beams whose original source path is
		%% not a descendant of the current working directory.
		%%
		%% valid values: fix | allow | ignore
		%% * fix = attempt to find source files under current directory
		%% * allow = don't do anything special, use the non-descendant path and
		%%   watch that file
		%% * ignore = don't watch that module at all and ignore any changes to
		%%   its source path
		%% default: fix
		{non_descendant, fix},

		%% excluded_modules: Ignore any modules listed
		%% default: []
		{excluded_modules,
			[bcrypt_nif
			]},

		%% executable: Identify the program that you want run by the "growl" notifications
		%% valid values: auto | notifu | 'notify-send' | growlnotify | emacsclient
		%% * auto = allow sync to autodetect which program to run
		%% * growlnotify = Use Growl for Mac
		%% * 'notify-send' = Use libnotify for Linux
		%% * notifu = The notifu program for Windows
		%% * emacsclient = Emacs notifications
		%% default: auto
		{executable, auto}
	]}
].
